#pragma kernel BuildNode

struct VoxelNodeData
{
    //I would need the GetVoxel(Vector3Int) function here.
    //And the GridClass, to manage NodePositions.
    //I would need to translate most of the Node into HLSL.
    
    //In the most basic form, each node can:
        //Contaign 8 values, Voxel or Nodes.
        //Get a Voxel position
    
    //Soner or later I'll need texture and data like that, I'll need to make UVs in here.
    
    
    VoxelInfo 0_0_0;
};
struct VoxelInfo
{
    //AxisBounds
    //
    
    
    struct AxisBounds
    {
        //X, Y, Z
    };
};

RWStructuredBuffer<VoxelNodeData> Node;

RWStructuredBuffer<int> values;


//More like, pass each node and check for Voxels?

[numthreads(1,1,1)]
void BuildNode(uint3 id : SV_DispatchThreadID)
{
    values[id.x] = 5;
}